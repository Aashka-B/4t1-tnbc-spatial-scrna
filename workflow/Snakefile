# workflow/Snakefile

import os
import sys
import subprocess
import pathlib
import yaml

# Check if config.yaml exists; generate if missing
cfg_path = pathlib.Path("config/config.yaml")
if not cfg_path.exists():
    print("config.yaml not found. Running generate_config.py...")
    try:
        subprocess.check_call([sys.executable, "scripts/download/generate_config.py"])
    except subprocess.CalledProcessError as e:
        raise RuntimeError(
            f"Config generation failed (exit {e.returncode}). "
            "Open scripts/download/generate_config.py and fix."
        ) from e

# Load the config and extract SRA_IDS
with open(cfg_path) as fh:
    CFG = yaml.safe_load(fh)
SRA_IDS = CFG.get("sra_ids", [])

# Ensure logs dir exists before proceeding with snakemake rules
os.makedirs("logs", exist_ok=True)

# Data acquisition and qc
include: "rules/download.smk"
include: "rules/qc.smk"

rule all:
    input:
        # Paired-end FASTQs for each SRA
        expand(["data/raw/{sra}_1.fastq.gz", "data/raw/{sra}_2.fastq.gz"], sra=SRA_IDS),
        # Final QC report
        "results/qc/multiqc/multiqc_report.html"
